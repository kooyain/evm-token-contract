const contractABI = [
	{
		"inputs": [
			{
				"internalType": "string[]",
				"name": "stringParams",
				"type": "string[]"
			},
			{
				"internalType": "address[]",
				"name": "addressParams",
				"type": "address[]"
			},
			{
				"internalType": "uint256[]",
				"name": "numberParams",
				"type": "uint256[]"
			},
			{
				"internalType": "bool[]",
				"name": "boolParams",
				"type": "bool[]"
			}
		],
		"stateMutability": "nonpayable",
		"type": "constructor"
	},
	{
		"anonymous": false,
		"inputs": [
			{
				"indexed": true,
				"internalType": "address",
				"name": "owner",
				"type": "address"
			},
			{
				"indexed": true,
				"internalType": "address",
				"name": "spender",
				"type": "address"
			},
			{
				"indexed": false,
				"internalType": "uint256",
				"name": "value",
				"type": "uint256"
			}
		],
		"name": "Approval",
		"type": "event"
	},
	{
		"anonymous": false,
		"inputs": [
			{
				"indexed": true,
				"internalType": "address",
				"name": "from",
				"type": "address"
			},
			{
				"indexed": true,
				"internalType": "address",
				"name": "to",
				"type": "address"
			},
			{
				"indexed": false,
				"internalType": "uint256",
				"name": "value",
				"type": "uint256"
			}
		],
		"name": "Transfer",
		"type": "event"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "owner1",
				"type": "address"
			},
			{
				"internalType": "address",
				"name": "spender",
				"type": "address"
			}
		],
		"name": "allowance",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "spender",
				"type": "address"
			},
			{
				"internalType": "uint256",
				"name": "amount",
				"type": "uint256"
			}
		],
		"name": "approve",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "account",
				"type": "address"
			}
		],
		"name": "balanceOf",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "deadAddress",
		"outputs": [
			{
				"internalType": "address",
				"name": "",
				"type": "address"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "decimals",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "spender",
				"type": "address"
			},
			{
				"internalType": "uint256",
				"name": "subtractedValue",
				"type": "uint256"
			}
		],
		"name": "decreaseAllowance",
		"outputs": [
			{
				"internalType": "bool",
				"name": "",
				"type": "bool"
			}
		],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "getCirculatingSupply",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "spender",
				"type": "address"
			},
			{
				"internalType": "uint256",
				"name": "addedValue",
				"type": "uint256"
			}
		],
		"name": "increaseAllowance",
		"outputs": [
			{
				"internalType": "bool",
				"name": "",
				"type": "bool"
			}
		],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "name",
		"outputs": [
			{
				"internalType": "string",
				"name": "",
				"type": "string"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "owner",
		"outputs": [
			{
				"internalType": "address",
				"name": "",
				"type": "address"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "symbol",
		"outputs": [
			{
				"internalType": "string",
				"name": "",
				"type": "string"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "totalSupply",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "recipient",
				"type": "address"
			},
			{
				"internalType": "uint256",
				"name": "amount",
				"type": "uint256"
			}
		],
		"name": "transfer",
		"outputs": [
			{
				"internalType": "bool",
				"name": "",
				"type": "bool"
			}
		],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "sender",
				"type": "address"
			},
			{
				"internalType": "address",
				"name": "recipient",
				"type": "address"
			},
			{
				"internalType": "uint256",
				"name": "amount",
				"type": "uint256"
			}
		],
		"name": "transferFrom",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"stateMutability": "payable",
		"type": "receive"
	}
];

const contractBytecode = '0x60a060405261dead73ffffffffffffffffffffffffffffffffffffffff1660809073ffffffffffffffffffffffffffffffffffffffff1681525034801561004557600080fd5b506040516120ee3803806120ee8339818101604052810190610067919061074a565b600083511461007557600080fd5b600081511461008357600080fd5b60003290508460008151811061009c5761009b610821565b5b6020026020010151600090816100b29190610a67565b50846001815181106100c7576100c6610821565b5b6020026020010151600190816100dd9190610a67565b50826000815181106100f2576100f1610821565b5b60200260200101516002819055508260018151811061011457610113610821565b5b6020026020010151600581905550600554600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6005546040516101c89190610b48565b60405180910390a35050505050610b63565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61023c826101f3565b810181811067ffffffffffffffff8211171561025b5761025a610204565b5b80604052505050565b600061026e6101da565b905061027a8282610233565b919050565b600067ffffffffffffffff82111561029a57610299610204565b5b602082029050602081019050919050565b600080fd5b600080fd5b600067ffffffffffffffff8211156102d0576102cf610204565b5b6102d9826101f3565b9050602081019050919050565b60005b838110156103045780820151818401526020810190506102e9565b60008484015250505050565b600061032361031e846102b5565b610264565b90508281526020810184848401111561033f5761033e6102b0565b5b61034a8482856102e6565b509392505050565b600082601f830112610367576103666101ee565b5b8151610377848260208601610310565b91505092915050565b600061039361038e8461027f565b610264565b905080838252602082019050602084028301858111156103b6576103b56102ab565b5b835b818110156103fd57805167ffffffffffffffff8111156103db576103da6101ee565b5b8086016103e88982610352565b855260208501945050506020810190506103b8565b5050509392505050565b600082601f83011261041c5761041b6101ee565b5b815161042c848260208601610380565b91505092915050565b600067ffffffffffffffff8211156104505761044f610204565b5b602082029050602081019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061048c82610461565b9050919050565b61049c81610481565b81146104a757600080fd5b50565b6000815190506104b981610493565b92915050565b60006104d26104cd84610435565b610264565b905080838252602082019050602084028301858111156104f5576104f46102ab565b5b835b8181101561051e578061050a88826104aa565b8452602084019350506020810190506104f7565b5050509392505050565b600082601f83011261053d5761053c6101ee565b5b815161054d8482602086016104bf565b91505092915050565b600067ffffffffffffffff82111561057157610570610204565b5b602082029050602081019050919050565b6000819050919050565b61059581610582565b81146105a057600080fd5b50565b6000815190506105b28161058c565b92915050565b60006105cb6105c684610556565b610264565b905080838252602082019050602084028301858111156105ee576105ed6102ab565b5b835b81811015610617578061060388826105a3565b8452602084019350506020810190506105f0565b5050509392505050565b600082601f830112610636576106356101ee565b5b81516106468482602086016105b8565b91505092915050565b600067ffffffffffffffff82111561066a57610669610204565b5b602082029050602081019050919050565b60008115159050919050565b6106908161067b565b811461069b57600080fd5b50565b6000815190506106ad81610687565b92915050565b60006106c66106c18461064f565b610264565b905080838252602082019050602084028301858111156106e9576106e86102ab565b5b835b8181101561071257806106fe888261069e565b8452602084019350506020810190506106eb565b5050509392505050565b600082601f830112610731576107306101ee565b5b81516107418482602086016106b3565b91505092915050565b60008060008060808587031215610764576107636101e4565b5b600085015167ffffffffffffffff811115610782576107816101e9565b5b61078e87828801610407565b945050602085015167ffffffffffffffff8111156107af576107ae6101e9565b5b6107bb87828801610528565b935050604085015167ffffffffffffffff8111156107dc576107db6101e9565b5b6107e887828801610621565b925050606085015167ffffffffffffffff811115610809576108086101e9565b5b6108158782880161071c565b91505092959194509250565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806108a257607f821691505b6020821081036108b5576108b461085b565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261091d7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826108e0565b61092786836108e0565b95508019841693508086168417925050509392505050565b6000819050919050565b600061096461095f61095a84610582565b61093f565b610582565b9050919050565b6000819050919050565b61097e83610949565b61099261098a8261096b565b8484546108ed565b825550505050565b600090565b6109a761099a565b6109b2818484610975565b505050565b5b818110156109d6576109cb60008261099f565b6001810190506109b8565b5050565b601f821115610a1b576109ec816108bb565b6109f5846108d0565b81016020851015610a04578190505b610a18610a10856108d0565b8301826109b7565b50505b505050565b600082821c905092915050565b6000610a3e60001984600802610a20565b1980831691505092915050565b6000610a578383610a2d565b9150826002028217905092915050565b610a7082610850565b67ffffffffffffffff811115610a8957610a88610204565b5b610a93825461088a565b610a9e8282856109da565b600060209050601f831160018114610ad15760008415610abf578287015190505b610ac98582610a4b565b865550610b31565b601f198416610adf866108bb565b60005b82811015610b0757848901518255600182019150602085019450602081019050610ae2565b86831015610b245784890151610b20601f891682610a2d565b8355505b6001600288020188555050505b505050505050565b610b4281610582565b82525050565b6000602082019050610b5d6000830184610b39565b92915050565b608051611562610b8c600039600081816105230152818161054f015261069301526115626000f3fe6080604052600436106100e15760003560e01c8063395093511161007f57806395d89b411161005957806395d89b41146102bb578063a457c2d7146102e6578063a9059cbb14610323578063dd62ed3e14610360576100e8565b8063395093511461021657806370a08231146102535780638da5cb5b14610290576100e8565b806323b872dd116100bb57806323b872dd1461016c57806327c8f835146101955780632b112e49146101c0578063313ce567146101eb576100e8565b806306fdde03146100ed578063095ea7b31461011857806318160ddd14610141576100e8565b366100e857005b600080fd5b3480156100f957600080fd5b5061010261039d565b60405161010f9190610eef565b60405180910390f35b34801561012457600080fd5b5061013f600480360381019061013a9190610faa565b61042f565b005b34801561014d57600080fd5b50610156610445565b6040516101639190610ff9565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e9190611014565b61044f565b005b3480156101a157600080fd5b506101aa610521565b6040516101b79190611076565b60405180910390f35b3480156101cc57600080fd5b506101d5610545565b6040516101e29190610ff9565b60405180910390f35b3480156101f757600080fd5b50610200610589565b60405161020d9190610ff9565b60405180910390f35b34801561022257600080fd5b5061023d60048036038101906102389190610faa565b610593565b60405161024a91906110ac565b60405180910390f35b34801561025f57600080fd5b5061027a600480360381019061027591906110c7565b610646565b6040516102879190610ff9565b60405180910390f35b34801561029c57600080fd5b506102a561068f565b6040516102b29190611076565b60405180910390f35b3480156102c757600080fd5b506102d06106b7565b6040516102dd9190610eef565b60405180910390f35b3480156102f257600080fd5b5061030d60048036038101906103089190610faa565b610749565b60405161031a91906110ac565b60405180910390f35b34801561032f57600080fd5b5061034a60048036038101906103459190610faa565b610816565b60405161035791906110ac565b60405180910390f35b34801561036c57600080fd5b50610387600480360381019061038291906110f4565b610835565b6040516103949190610ff9565b60405180910390f35b6060600080546103ac90611163565b80601f01602080910402602001604051908101604052809291908181526020018280546103d890611163565b80156104255780601f106103fa57610100808354040283529160200191610425565b820191906000526020600020905b81548152906001019060200180831161040857829003601f168201915b5050505050905090565b61044161043a6108bc565b83836108c4565b5050565b6000600554905090565b61045a838383610a8d565b5061051c836104676108bc565b610517846040518060600160405280602881526020016114e060289139600460008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006104cd6108bc565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610b809092919063ffffffff16565b6108c4565b505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60006105846105737f0000000000000000000000000000000000000000000000000000000000000000610646565b600554610be490919063ffffffff16565b905090565b6000600254905090565b600061063c6105a06108bc565b8461063785600460006105b16108bc565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610c2e90919063ffffffff16565b6108c4565b6001905092915050565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6060600180546106c690611163565b80601f01602080910402602001604051908101604052809291908181526020018280546106f290611163565b801561073f5780601f106107145761010080835404028352916020019161073f565b820191906000526020600020905b81548152906001019060200180831161072257829003601f168201915b5050505050905090565b600061080c6107566108bc565b846108078560405180606001604052806025815260200161150860259139600460006107806108bc565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610b809092919063ffffffff16565b6108c4565b6001905092915050565b600061082a6108236108bc565b8484610a8d565b506001905092915050565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610933576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092a90611206565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099990611298565b60405180910390fd5b80600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610a809190610ff9565b60405180910390a3505050565b60008073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610afd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610af49061132a565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b6c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b63906113bc565b60405180910390fd5b610b77848484610c8c565b90509392505050565b6000838311158290610bc8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bbf9190610eef565b60405180910390fd5b5060008385610bd7919061140b565b9050809150509392505050565b6000610c2683836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610b80565b905092915050565b6000808284610c3d919061143f565b905083811015610c82576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c79906114bf565b60405180910390fd5b8091505092915050565b6000610d17826040518060400160405280601481526020017f496e73756666696369656e742042616c616e6365000000000000000000000000815250600360008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610b809092919063ffffffff16565b600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610dac82600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610c2e90919063ffffffff16565b600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610e4c9190610ff9565b60405180910390a3600190509392505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610e99578082015181840152602081019050610e7e565b60008484015250505050565b6000601f19601f8301169050919050565b6000610ec182610e5f565b610ecb8185610e6a565b9350610edb818560208601610e7b565b610ee481610ea5565b840191505092915050565b60006020820190508181036000830152610f098184610eb6565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610f4182610f16565b9050919050565b610f5181610f36565b8114610f5c57600080fd5b50565b600081359050610f6e81610f48565b92915050565b6000819050919050565b610f8781610f74565b8114610f9257600080fd5b50565b600081359050610fa481610f7e565b92915050565b60008060408385031215610fc157610fc0610f11565b5b6000610fcf85828601610f5f565b9250506020610fe085828601610f95565b9150509250929050565b610ff381610f74565b82525050565b600060208201905061100e6000830184610fea565b92915050565b60008060006060848603121561102d5761102c610f11565b5b600061103b86828701610f5f565b935050602061104c86828701610f5f565b925050604061105d86828701610f95565b9150509250925092565b61107081610f36565b82525050565b600060208201905061108b6000830184611067565b92915050565b60008115159050919050565b6110a681611091565b82525050565b60006020820190506110c1600083018461109d565b92915050565b6000602082840312156110dd576110dc610f11565b5b60006110eb84828501610f5f565b91505092915050565b6000806040838503121561110b5761110a610f11565b5b600061111985828601610f5f565b925050602061112a85828601610f5f565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061117b57607f821691505b60208210810361118e5761118d611134565b5b50919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b60006111f0602483610e6a565b91506111fb82611194565b604082019050919050565b6000602082019050818103600083015261121f816111e3565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000611282602283610e6a565b915061128d82611226565b604082019050919050565b600060208201905081810360008301526112b181611275565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000611314602583610e6a565b915061131f826112b8565b604082019050919050565b6000602082019050818103600083015261134381611307565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b60006113a6602383610e6a565b91506113b18261134a565b604082019050919050565b600060208201905081810360008301526113d581611399565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061141682610f74565b915061142183610f74565b9250828203905081811115611439576114386113dc565b5b92915050565b600061144a82610f74565b915061145583610f74565b925082820190508082111561146d5761146c6113dc565b5b92915050565b7f536166654d6174683a206164646974696f6e206f766572666c6f770000000000600082015250565b60006114a9601b83610e6a565b91506114b482611473565b602082019050919050565b600060208201905081810360008301526114d88161149c565b905091905056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220993df258c3cb77073b1cdb4b209e0738826652b1bab8debebebf17e96078736064736f6c634300081a0033';

async function deployToken() {
    if (typeof window.ethereum !== 'undefined') {
        const web3 = new Web3(window.ethereum);

        try {
            // Request account access
            await window.ethereum.request({ method: 'eth_requestAccounts' });
            const accounts = await web3.eth.getAccounts();
            const deployer = accounts[0];

            // Parameters for the constructor
            const stringParams = ["TokenName", "TEST"];
            const addressParams = [];
            const numberParams = [18, web3.utils.toWei('1', 'ether')];
            const boolParams = [];

            // Contract deployment
            const contract = new web3.eth.Contract(contractABI);
            const deployOptions = {
                data: contractBytecode,
                arguments: [stringParams, addressParams, numberParams, boolParams]
            };

            document.getElementById("status").innerText = "Deploying contract...";

            // Estimate gas
            const estimatedGas = await contract.deploy(deployOptions).estimateGas({ from: deployer });

            // Get current gas price
            const gasPrice = await web3.eth.getGasPrice();

            const newContractInstance = await contract.deploy(deployOptions)
                .send({
                    from: deployer,
                    gas: estimatedGas,
                    gasPrice: gasPrice
                });

            document.getElementById("status").innerText = "Contract deployed at: " + newContractInstance.options.address;

        } catch (error) {
            console.error(error);
            document.getElementById("status").innerText = "Error deploying contract: " + error.message;
        }
    } else {
        console.log('MetaMask is not installed!');
        document.getElementById("status").innerText = "Please install MetaMask to deploy the contract.";
    }
}

